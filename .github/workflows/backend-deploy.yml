# Before this make sure:
# 1️⃣ A specific IAM user for GitHub Actions with limited (PushPullECR) policy is created.
# 2️⃣ An ECR repository named "my-spring-app" exists in AWS.

name: Build and Push Backend Image to Amazon ECR

on:
  push:
    branches:
      - main                         
    paths:
      - 'backend/**'                 
      - '.github/workflows/backend-deploy.yml'   

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: my-spring-app
  IMAGE_TAG: latest

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: backend   

    steps:
      # 1️⃣ Checkout repository
      - name: Checkout code
        uses: actions/checkout@v4

      # 2️⃣ Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # 3️⃣ Log in to Amazon ECR
      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      # 4️⃣ Build Docker image
      - name: Build Docker image
        run: |
          docker build -t $ECR_REPOSITORY:$IMAGE_TAG .

      # 5️⃣ Tag and push image to ECR
      - name: Push image to ECR
        run: |
          docker tag $ECR_REPOSITORY:$IMAGE_TAG ${{ steps.login-ecr.outputs.registry }}/$ECR_REPOSITORY:$IMAGE_TAG
          docker push ${{ steps.login-ecr.outputs.registry }}/$ECR_REPOSITORY:$IMAGE_TAG

      # 6️⃣ Output image URI
      - name: Image pushed summary
        run: echo "✅ Image pushed to: ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}"
